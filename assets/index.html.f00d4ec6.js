import{r as t,o as l,c as r,a as n,b as a,F as c,d as o,e as s}from"./app.b8c65b01.js";import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";var i="/stm32-mac-development/assets/STM32CubeMX-New_Project.1a750173.png",d="/stm32-mac-development/assets/STM32CubeMX-MCU_Selector.a2d9acb8.png",u="/stm32-mac-development/assets/STM32CubeMX-pinoutConfig.6edeaa3f.png",b="/stm32-mac-development/assets/STM32CubeMX-ProjectManger.f32d4fd7.png";const m={},h=o('<h1 id="stm32-mac-development" tabindex="-1"><a class="header-anchor" href="#stm32-mac-development" aria-hidden="true">#</a> stm32-mac-development</h1><p>\u5728 Mac(Apple Silicon) \u4E0A\u5F00\u53D1 STM32</p><ul><li><a href="#stm32-mac-development">stm32-mac-development</a><ul><li><a href="#%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83">\u914D\u7F6E\u5F00\u53D1\u73AF\u5883</a><ul><li><a href="#%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85">\u8F6F\u4EF6\u5B89\u88C5</a><ul><li><a href="#1-stm32cubemx">1. STM32Cubemx</a></li><li><a href="#2-openocd">2. OpenOCD</a></li><li><a href="#3-arm-gcc-%E5%B7%A5%E5%85%B7%E9%93%BE">3. ARM-GCC \u5DE5\u5177\u94FE</a></li></ul></li><li><a href="#%E4%BB%A3%E7%A0%81%E7%8E%AF%E5%A2%83">\u4EE3\u7801\u73AF\u5883</a></li></ul></li><li><a href="#%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE">\u521D\u59CB\u5316\u9879\u76EE</a></li><li><a href="#%E9%A1%B9%E7%9B%AE%E7%BC%96%E8%AF%91%E5%92%8C%E7%83%A7%E5%BD%95">\u9879\u76EE\u7F16\u8BD1\u548C\u70E7\u5F55</a><ul><li><a href="#%E7%BC%96%E8%AF%91%E5%B7%A5%E7%A8%8B">\u7F16\u8BD1\u5DE5\u7A0B</a></li><li><a href="#%E4%BD%BF%E7%94%A8-openocd-%E7%83%A7%E5%BD%95%E5%88%B0%E5%BC%80%E5%8F%91%E6%9D%BF">\u4F7F\u7528 OpenOCD \u70E7\u5F55\u5230\u5F00\u53D1\u677F</a></li></ul></li><li><a href="#%E6%95%B0%E6%8D%AE">\u6570\u636E</a></li><li><a href="#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0">\u53C2\u8003\u6587\u7AE0</a></li></ul></li></ul><h2 id="\u914D\u7F6E\u5F00\u53D1\u73AF\u5883" tabindex="-1"><a class="header-anchor" href="#\u914D\u7F6E\u5F00\u53D1\u73AF\u5883" aria-hidden="true">#</a> \u914D\u7F6E\u5F00\u53D1\u73AF\u5883</h2><h3 id="\u8F6F\u4EF6\u5B89\u88C5" tabindex="-1"><a class="header-anchor" href="#\u8F6F\u4EF6\u5B89\u88C5" aria-hidden="true">#</a> \u8F6F\u4EF6\u5B89\u88C5</h3><h4 id="_1-stm32cubemx" tabindex="-1"><a class="header-anchor" href="#_1-stm32cubemx" aria-hidden="true">#</a> 1. STM32Cubemx</h4>',6),_=s("STM32Cubemx("),g={href:"https://www.st.com/en/development-tools/stm32cubemx.html#get-software",target:"_blank",rel:"noopener noreferrer"},k=s("\u5B98\u65B9\u4E0B\u8F7D"),f=s(") \u662F x86 \u67B6\u6784\u7684\uFF0C\u5728 Apple silicon \u4E0A\u8FD0\u884C\u9700\u8981 rosetta2 \u7684\u652F\u6301\u3002"),v=n("blockquote",null,[n("p",null,[s("\u5B89\u88C5\u65F6\uFF0C\u9700\u8981\u53F3\u952E "),n("code",null,"\u663E\u793A\u5305\u5185\u5BB9"),s("\uFF0C\u7136\u540E\u5728 "),n("code",null,"Contents/MacOS"),s(" \u70B9\u51FB\u5B89\u88C5\u5305")])],-1),x=n("h4",{id:"_2-openocd",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-openocd","aria-hidden":"true"},"#"),s(" 2. OpenOCD")],-1),E={href:"https://openocd.org",target:"_blank",rel:"noopener noreferrer"},C=s("OpenOCD(Open On-Chip Debugger)"),A=s("\u662F\u4E00\u4E2A\u5F00\u6E90\u7684\u8C03\u8BD5\u5DE5\u5177("),M={href:"https://sourceforge.net/p/openocd/code/ci/master/tree/",target:"_blank",rel:"noopener noreferrer"},O=s("\u6E90\u7801"),B=s(")\uFF0C\u63D0\u4F9B\u9488\u5BF9\u5D4C\u5165\u5F0F\u8BBE\u5907\u7684\u8C03\u8BD5\u3001\u7CFB\u7EDF\u7F16\u7A0B\u548C\u8FB9\u754C\u626B\u63CF\u529F\u80FD\u3002\u4F46\u662F\u5728 Mac \u65E0\u6CD5\u76F4\u63A5\u4F7F\u7528\uFF0C\u56E0\u6B64\u8FD9\u91CC\u4F7F\u7528\u4E00\u4E2A\u4E3A Mac \u7F16\u8BD1\u597D\u7684 "),w={href:"https://github.com/xpack-dev-tools/openocd-xpack",target:"_blank",rel:"noopener noreferrer"},D=n("code",null,"xpack-dev-tools/openocd-xpack",-1),P=s("\uFF0C\u8FDB\u5165\u5230 "),T={href:"https://github.com/xpack-dev-tools/openocd-xpack/releases",target:"_blank",rel:"noopener noreferrer"},S=s("Releases"),I=s(" \u4E2D\u4E0B\u8F7D "),N=n("code",null,"xpack-openocd-<version>-darwin-arm64.tar.gz",-1),F=s("\u3002"),j=o(`<p>\u89E3\u538B\u540E\u6DFB\u52A0\u5230\u73AF\u5883\u53D8\u91CF\u4E2D\uFF0C\u8FD9\u91CC\u4F7F\u7528 <code>~/.zshrc</code>\uFF0C\u6DFB\u52A0\u5982\u4E0B\u5185\u5BB9\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">OPENOCD_HOME</span><span class="token operator">=</span><span class="token string">&quot;/path/to/xpack-openocd-&lt;version&gt;&quot;</span> <span class="token comment"># openocd</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$OPENOCD_HOME</span>/bin
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_3-arm-gcc-\u5DE5\u5177\u94FE" tabindex="-1"><a class="header-anchor" href="#_3-arm-gcc-\u5DE5\u5177\u94FE" aria-hidden="true">#</a> 3. ARM-GCC \u5DE5\u5177\u94FE</h4>`,3),q={href:"https://developer.arm.com/downloads/-/gnu-rm",target:"_blank",rel:"noopener noreferrer"},y=s("arm-none-eabi-gcc"),H=s(" \u662F\u4E00\u4E2A\u5F00\u6E90\u7684 ARM \u67B6\u6784\u7684\u7F16\u8BD1\u5668\uFF0C\u8FD9\u91CC\u4F7F\u7528 "),z={href:"https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm",target:"_blank",rel:"noopener noreferrer"},G=s("GNU Arm Embedded Toolchain"),$=s("\u3002"),L=s("\u5B98\u65B9\u6CA1\u6709\u63D0\u4F9B Apple Silicon \u7684\u7248\u672C\uFF0C\u56E0\u6B64\u8FD9\u91CC\u4F7F\u7528\u4E00\u4E2A\u4E3A Mac \u7F16\u8BD1\u597D\u7684\u9879\u76EE "),R={href:"https://github.com/xpack-dev-tools/arm-none-eabi-gcc-xpack",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"xpack-dev-tools/arm-none-eabi-gcc-xpack",-1),X=s("\uFF0C\u8FDB\u5165\u5230 "),U={href:"https://github.com/xpack-dev-tools/arm-none-eabi-gcc-xpack/releases",target:"_blank",rel:"noopener noreferrer"},J=s("Releases"),K=s(" \u4E2D\u4E0B\u8F7D "),W=n("code",null,"xpack-arm-none-eabi-gcc-<version>-xpack-darwin-arm64.tar.gz",-1),Q=s("\u3002"),Y=o(`<p>\u89E3\u538B\u540E\u6DFB\u52A0\u5230\u73AF\u5883\u53D8\u91CF\u4E2D\uFF0C\u8FD9\u91CC\u4F7F\u7528 <code>~/.zshrc</code>\uFF0C\u6DFB\u52A0\u5982\u4E0B\u5185\u5BB9\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">ARM_GCC_HOME</span><span class="token operator">=</span><span class="token string">&quot;/path/to/xpack-arm-none-eabi-gcc-&lt;version&gt;&quot;</span> <span class="token comment"># arm-none-eabi-gcc</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$ARM_GCC_HOME</span>/bin
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u4EE3\u7801\u73AF\u5883" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u73AF\u5883" aria-hidden="true">#</a> \u4EE3\u7801\u73AF\u5883</h3><h2 id="\u521D\u59CB\u5316\u9879\u76EE" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5316\u9879\u76EE" aria-hidden="true">#</a> \u521D\u59CB\u5316\u9879\u76EE</h2><ol><li>\u521B\u5EFA\u9879\u76EE \u6253\u5F00 STM32CubeMX</li></ol><p>\u65B0\u5EFA\u9879\u76EE <code>File -&gt; New Project</code></p><p><img src="`+i+'" alt="New_Project"></p><p>\u9009\u62E9\u82AF\u7247(\u5DE6\u4FA7 <code>Commercial Part Number</code> \u641C\u7D22)\uFF0C\u7136\u540E\u53F3\u4E0A\u89D2 <code>Start Project</code><img src="'+d+'" alt="MCU_Selector"></p><ol start="2"><li>\u914D\u7F6E\u9879\u76EE</li></ol><ul><li><p><strong>Pinout&amp;Configuration</strong>: \u8BBE\u7F6E\u82AF\u7247 Pinout <img src="'+u+'" alt="Pinout"></p></li><li><p><strong>Project Manger -&gt; Project</strong>: \u8BBE\u7F6E\u9879\u76EE\u540D\u79F0\u548C\u8DEF\u5F84, <code>Toolchain/IDE</code> \u9009\u62E9 <code>Makefile</code><img src="'+b+`" alt="ProjectManger"></p></li><li><p><strong>Project Manger -&gt; Code Generator</strong>: \u9009\u62E9 <code>Copy only the necessary library files</code>(\u4E0D\u8981\u590D\u5236\u5168\u90E8\u5E93\u76EE\u5F55\uFF0C\u5426\u5219\u9879\u76EE\u5F88\u5927)\u3002\u52FE\u9009 <code>Generate peripheral initialization as a pair of &#39;.c/.h&#39; files per peripheral</code>\uFF0C\u8FD9\u6837\u4F1A\u751F\u6210 <code>.c/.h</code> \u6587\u4EF6\uFF0C\u65B9\u4FBF\u67E5\u770B\u548C\u4FEE\u6539\u3002</p></li></ul><h2 id="\u9879\u76EE\u7F16\u8BD1\u548C\u70E7\u5F55" tabindex="-1"><a class="header-anchor" href="#\u9879\u76EE\u7F16\u8BD1\u548C\u70E7\u5F55" aria-hidden="true">#</a> \u9879\u76EE\u7F16\u8BD1\u548C\u70E7\u5F55</h2><h3 id="\u7F16\u8BD1\u5DE5\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u7F16\u8BD1\u5DE5\u7A0B" aria-hidden="true">#</a> \u7F16\u8BD1\u5DE5\u7A0B</h3><p>\u8FDB\u5165\u5230\u5DE5\u7A0B\u76EE\u5F55\u4E0B\uFF0C\u6267\u884C <code>make</code>\uFF0C\u7F16\u8BD1\u6210\u529F\u540E\u4F1A\u751F\u6210 <code>build</code> \u76EE\u5F55\uFF0C\u5305\u542B\u7F16\u8BD1\u540E\u7684\u6587\u4EF6\u3002\u8BE5\u8FC7\u7A0B\u4F1A\u7ED3\u5408 <code>arm-none-eabi-gcc</code> \u8FDB\u884C\u7F16\u8BD1\uFF0C\u5177\u4F53\u7EC6\u8282\u53EF\u4EE5\u67E5\u770B <code>Makefile</code>\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>arm-none-eabi-size build/stm32-car.elf
   text    data     bss     dec     hex filename
   <span class="token number">3564</span>      <span class="token number">20</span>    <span class="token number">1572</span>    <span class="token number">5156</span>    <span class="token number">1424</span> build/stm32-car.elf
arm-none-eabi-objcopy -O ihex build/stm32-car.elf build/stm32-car.hex
arm-none-eabi-objcopy -O binary -S build/stm32-car.elf build/stm32-car.bin
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u4F7F\u7528-openocd-\u70E7\u5F55\u5230\u5F00\u53D1\u677F" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-openocd-\u70E7\u5F55\u5230\u5F00\u53D1\u677F" aria-hidden="true">#</a> \u4F7F\u7528 OpenOCD \u70E7\u5F55\u5230\u5F00\u53D1\u677F</h3><p>\u8FD0\u884C\u4E0B\u9762\u7684\u547D\u4EE4\uFF0C\u542F\u52A8 OpenOCD\uFF0C\u8FDE\u63A5\u5230\u5F00\u53D1\u677F\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">openocd_scripts</span><span class="token operator">=</span><span class="token variable">$OPENOCD_HOME</span>/openocd/scripts
openocd <span class="token punctuation">\\</span>
    -f <span class="token variable">$openocd_scripts</span>/interface/stlink.cfg <span class="token punctuation">\\</span>
    -f <span class="token variable">$openocd_scripts</span>/target/stm32g4x.cfg

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>\u5982\u679C\u51FA\u73B0 \u201Cmacos \u65E0\u6CD5\u9A8C\u8BC1\u201Copenocd\u7684\u5F00\u53D1\u8005\u3002\u4F60\u786E\u5B9A\u8981\u6253\u5F00\u5B83\u5417\uFF1F\u201D\uFF0C\u5230<code>\u7CFB\u7EDF\u8BBE\u7F6E -&gt; \u5B89\u5168\u6027\u4E0E\u9690\u79C1 -&gt; \u901A\u7528</code>\uFF0C\u70B9\u51FB\u201C\u4ECD\u8981\u6253\u5F00\u201D\u5373\u53EF\u3002</p></blockquote><p>\u51FA\u73B0\u4EE5\u4E0B\u5185\u5BB9\uFF0C\u8868\u793A\u8FDE\u63A5\u6210\u529F\uFF0C\u5176\u4E2D\u53EF\u4EE5\u83B7\u5F97**\u4E09\u79CD\u7AEF\u53E3\u8FDE\u63A5\u534F\u8BAE\u65B9\u5F0F(tcl,telnet,gdb)**\u548C\u5176\u4ED6\u4E00\u4E9B\u4E00\u4E9B\u4FE1\u606F</p><ul><li>tcl \u76D1\u542C\u7AEF\u53E3\uFF1A6666</li><li>telnet \u76D1\u542C\u7AEF\u53E3\uFF1A4444</li><li>gdb \u76D1\u542C\u7AEF\u53E3\uFF1A3333 (\u8C03\u8BD5\u529F\u80FD\u4F7F\u7528)</li><li>\u65F6\u949F\u9891\u7387\uFF1A2000 kHz</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>xPack Open On-Chip Debugger <span class="token number">0.12</span>.0-01004-g9ea7f3d64-dirty <span class="token punctuation">(</span><span class="token number">2023</span>-01-30-17:03<span class="token punctuation">)</span>
Licensed under GNU GPL v2
For bug reports, <span class="token builtin class-name">read</span>
        http://openocd.org/doc/doxygen/bugs.html
Info <span class="token builtin class-name">:</span> auto-selecting first available session transport <span class="token string">&quot;hla_swd&quot;</span><span class="token builtin class-name">.</span> To override use <span class="token string">&#39;transport select &lt;transport&gt;&#39;</span><span class="token builtin class-name">.</span>
Info <span class="token builtin class-name">:</span> The selected transport took over low-level target control. The results might differ compared to plain JTAG/SWD
Info <span class="token builtin class-name">:</span> Listening on port <span class="token number">6666</span> <span class="token keyword">for</span> tcl connections
Info <span class="token builtin class-name">:</span> Listening on port <span class="token number">4444</span> <span class="token keyword">for</span> telnet connections
Info <span class="token builtin class-name">:</span> clock speed <span class="token number">2000</span> kHz
Info <span class="token builtin class-name">:</span> STLINK V3J9M3 <span class="token punctuation">(</span>API v3<span class="token punctuation">)</span> VID:PID 0483:374E
Info <span class="token builtin class-name">:</span> Target voltage: <span class="token number">3.285220</span>
Info <span class="token builtin class-name">:</span> <span class="token punctuation">[</span>stm32g4x.cpu<span class="token punctuation">]</span> Cortex-M4 r0p1 processor detected
Info <span class="token builtin class-name">:</span> <span class="token punctuation">[</span>stm32g4x.cpu<span class="token punctuation">]</span> target has <span class="token number">6</span> breakpoints, <span class="token number">4</span> watchpoints
Info <span class="token builtin class-name">:</span> starting gdb server <span class="token keyword">for</span> stm32g4x.cpu on <span class="token number">3333</span>
Info <span class="token builtin class-name">:</span> Listening on port <span class="token number">3333</span> <span class="token keyword">for</span> gdb connections
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u4FDD\u6301\u4E0A\u8FF0\u8FDE\u63A5\u7684\u72B6\u6001\u4E0B\uFF0C\u5728\u53E6\u4E00\u4E2A\u7EC8\u7AEF\u4E2D\uFF0C\u542F\u52A8 <code>telnet</code>\uFF0C\u8FDE\u63A5\u5230 OpenOCD</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>telnet localhost <span class="token number">4444</span>
<span class="token comment"># \u8FDE\u63A5\u6210\u529F\u540E\uFF0C\u8F93\u5165</span>
<span class="token operator">&gt;</span> <span class="token function">halt</span>  <span class="token comment"># \u76EE\u6807\u82AF\u7247\u6302\u8D77\uFF0C\u76F8\u5F53\u4E8E\u5173\u673A</span>
<span class="token comment"># &gt; flash write_image erase &lt;\u9700\u8981\u70E7\u5199\u7684\u76EE\u6807\u6587\u4EF6&gt;</span>
<span class="token operator">&gt;</span> flash write_image erase build/stm32-car.bin
<span class="token operator">&gt;</span> reset <span class="token comment"># \u76EE\u6807\u82AF\u7247\u590D\u4F4D</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u4E5F\u53EF\u4EE5\u4E00\u6B21\u6027\u6267\u884C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">openocd_scripts</span><span class="token operator">=</span><span class="token variable">$OPENOCD_HOME</span>/openocd/scripts
openocd <span class="token punctuation">\\</span>
    -f <span class="token variable">$openocd_scripts</span>/interface/stlink.cfg <span class="token punctuation">\\</span>
    -f <span class="token variable">$openocd_scripts</span>/target/stm32g4x.cfg <span class="token punctuation">\\</span>
    -c init <span class="token punctuation">\\</span>
    -c <span class="token string">&quot;reset halt; wait_halt; flash write_image erase build/stm32-car.bin 0x08000000;&quot;</span> <span class="token punctuation">\\</span>
    -c <span class="token string">&quot;reset run; shutdown&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><code>-c</code> \u8868\u793A\u8981\u6267\u884C\u7684\u9009\u9879\uFF0C <code>init</code> \u521D\u59CB\u5316</li><li><code>wait_halt</code> \u662F\u7B49\u5F85\u76EE\u6807\u82AF\u7247\u6302\u8D77\uFF0C\u5FC5\u987B\u6709</li></ul><h2 id="\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E" aria-hidden="true">#</a> \u6570\u636E</h2>`,27),Z={href:"https://www.st.com/zh/microcontrollers-microprocessors/stm32g474re.html",target:"_blank",rel:"noopener noreferrer"},nn=s("STM32G474RE"),sn=n("h2",{id:"\u53C2\u8003\u6587\u7AE0",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u53C2\u8003\u6587\u7AE0","aria-hidden":"true"},"#"),s(" \u53C2\u8003\u6587\u7AE0")],-1),en={href:"https://zhuanlan.zhihu.com/p/41517198",target:"_blank",rel:"noopener noreferrer"},an=s("\u8DDF\u6211\u4E00\u8D77\u5B66OpenOCD");function on(tn,ln){const e=t("ExternalLinkIcon");return l(),r(c,null,[h,n("p",null,[_,n("a",g,[k,a(e)]),f]),v,x,n("p",null,[n("a",E,[C,a(e)]),A,n("a",M,[O,a(e)]),B,n("a",w,[D,a(e)]),P,n("a",T,[S,a(e)]),I,N,F]),j,n("p",null,[n("a",q,[y,a(e)]),H,n("a",z,[G,a(e)]),$]),n("p",null,[L,n("a",R,[V,a(e)]),X,n("a",U,[J,a(e)]),K,W,Q]),Y,n("p",null,[n("a",Z,[nn,a(e)])]),sn,n("ul",null,[n("li",null,[n("a",en,[an,a(e)])])])],64)}var pn=p(m,[["render",on]]);export{pn as default};
